q_states:
  q_list:
  - '0'
  - '1'
  - '2'
  initial: '0 '
  final: 

alphabet:
- '0'
- '1'
# None will be used as blank , later replaced with B
tape_alphabet:
- '0'
- '1'
- 'x'
- 
# instructions for transitions
delta:

# first case, starts blank and places a 0, moves left
- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: '0'
    mem_cache_value:
    tape_output: '0'
    tape_displacement: 'L'

- params:
    initial_state:
    mem_cache_value:
    tape_input:
  output:
    final_state:
    mem_cache_value:
    tape_output:


- params:
    initial_state:
    mem_cache_value:
    tape_input:
  output:
    final_state:
    mem_cache_value:
    tape_output:
# ...
# add for next instructions, each for an state 

# to check binary codification: y / n
binary_cod:
  binary : 'y'