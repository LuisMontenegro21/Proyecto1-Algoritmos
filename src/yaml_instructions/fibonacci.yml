q_states:
  q_list:
  - '0'
  - '1'
  - '2'
  - '3'
  initial: '0 '
  final: '3'

alphabet:
- '0'
- '1'
# None will be used as blank , later replaced with B
# p means F(n-1) and a means F(n-2)
# x is used to count how many times a process is done
tape_alphabet:
- '0'
- '1'
- 'p'
- 'a'
- '#'
- 'x'
- 
# instructions for transitions
delta:

# first case, starts blank and places a 'p', moves right
- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: '0'
    mem_cache_value:
    tape_output: 'p'
    tape_displacement: 'L'

- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: '1'
    mem_cache_value:
    tape_output: '1'
    tape_displacement: 'L'


- params:
    initial_state: '1'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: '1'
    mem_cache_value:
    tape_output: 'a'
    tape_displacement: 'L'


- params:
    initial_state: '1'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: '1'
    mem_cache_value:
    tape_output: '1'
    tape_displacement: 'L'

# ...
# add for next instructions, each for an state 

# to check binary codification: y / n
binary_cod:
  binary : 'y'