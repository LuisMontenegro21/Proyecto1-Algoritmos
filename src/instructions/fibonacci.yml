q_states:
  q_list:
  - '0'
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
  - '6'
  - '7'
  - '8'
  - '9'
  - '10'
  initial: '0'
  final: '10'

alphabet:
- '0'
- '1'
# X is a marker and Null is blank
tape_alphabet:
- '0'
- '1'
- '#'
- '|'
- 
# instructions for transitions
delta:

# Q0
# q0 q0 0 0 R
- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: '1'

  output:
    final_state: '0'
    mem_cache_value:
    tape_output: '1'
    tape_displacement: 'R'

- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: '0'

  output:
    final_state: '0'
    mem_cache_value:
    tape_output: '0'
    tape_displacement: 'R'

- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: '#'

  output:
    final_state: '0'
    mem_cache_value:
    tape_output: '#'
    tape_displacement: 'R'

- params:
    initial_state: '0'
    mem_cache_value: 
    tape_input: 

  output:
    final_state: 'f'
    mem_cache_value:
    tape_output: 
    tape_displacement: 'S'


# ...
# add for next instructions, each for an state 

# to check binary codification: y / n
binary_cod:
  binary : 'y'


simulation_strings:
- 1
- 2
- 3
- 4
- 5
- 6
- 7
- 8
- 9
- 10
- 11
- 12
- 13
- 14
- 15
