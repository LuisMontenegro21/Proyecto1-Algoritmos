# estructura para la segunda m√°quina de Turing
q_states:
  q_list:
  - '0'
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
  - '6'
  initial: '0'
  final: '6'

alphabet:
- '0'
- '1'

tape_alphabet:
- '0'
- '1'
- 

delta:

# en caso el valor inicial sea Blank en q0
- params:
    initial_state: '0'
    mem_cache_value:
    tape_input: 
  output:
    final_state: '1'
    mem_cache_value: 
    tape_output: 
    tape_displacement: 'L'

# en caso lea 0 en q0
- params:
    initial_state: '0'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '0'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'R'

# en caso lea 1 en q0
- params:
    initial_state: '0'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '0'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'R'

 # en caso lea x en q1
- params:
    initial_state: '1'
    mem_cache_value:
    tape_input: 'x'
  output:
    final_state: '1'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'L' 

 # en caso lea 0 en q1
- params:
    initial_state: '1'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '2'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'R'

 # en caso lea 1 en q1
- params:
    initial_state: '1'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '3'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'R'

 # en caso lea Blank en q1
- params:
    initial_state: '1'
    mem_cache_value:
    tape_input: 
  output:
    final_state: '5'
    mem_cache_value: 
    tape_output: 
    tape_displacement: 'R'

 # en caso lea 0 en q2
- params:
    initial_state: '2'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '2'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'R'

 # en caso lea 1 en q2
- params:
    initial_state: '2'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '2'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'R'

 # en caso lea x en q2
- params:
    initial_state: '2'
    mem_cache_value:
    tape_input: 'x'
  output:
    final_state: '2'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'R'

 # en caso lea Blank en q2
- params:
    initial_state: '2'
    mem_cache_value:
    tape_input: 
  output:
    final_state: '4'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'L'

 # en caso lea 0 en q3
- params:
    initial_state: '3'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '3'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'R'

 # en caso lea 1 en q3
- params:
    initial_state: '3'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '3'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'R'
  
 # en caso lea x en q3
- params:
    initial_state: '3'
    mem_cache_value:
    tape_input: 'x'
  output:
    final_state: '3'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'R'

 # en caso lea Blank en q3
- params:
    initial_state: '3'
    mem_cache_value:
    tape_input: 
  output:
    final_state: '4'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'L'
  
# en caso lea 0 en q4
- params:
    initial_state: '4'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '4'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'L'

# en caso lea 1 en q4
- params:
    initial_state: '4'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '4'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'L'

# en caso lea x en q4
- params:
    initial_state: '4'
    mem_cache_value:
    tape_input: 'x'
  output:
    final_state: '1'
    mem_cache_value: 
    tape_output: 'x'
    tape_displacement: 'L'

 # en caso lea x en q5
- params:
    initial_state: '5'
    mem_cache_value:
    tape_input: 'x'
  output:
    final_state: '5'
    mem_cache_value: 
    tape_output: 
    tape_displacement: 'R'

 # en caso lea 0 en q5
- params:
    initial_state: '5'
    mem_cache_value:
    tape_input: '0'
  output:
    final_state: '6'
    mem_cache_value: 
    tape_output: '0'
    tape_displacement: 'S'

 # en caso lea 1 en q5
- params:
    initial_state: '5'
    mem_cache_value:
    tape_input: '1'
  output:
    final_state: '6'
    mem_cache_value: 
    tape_output: '1'
    tape_displacement: 'S'
